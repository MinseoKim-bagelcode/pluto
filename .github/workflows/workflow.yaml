name: Pluto - check 

on:
  pull_request:
    types: [opened, synchronize, reopened]  # PR 생성/수정/다시 열림 시
    paths:
      - "**/*.yml"
      - "**/*.yaml"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check_deprecated_k8_api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Prepare (deps + lint)
      #   shell: bash
      #   run: |
      #     set -euo pipefail
      #     helm dependency build charts/my-app
      #     helm lint charts/my-app -f values.yaml

      - name: Helmfile 실행
        uses: helmfile/helmfile-action@v2.0.5
        with:
          helmfile-version: 'latest'     # Helmfile 버전 지정 (예: v0.162.0)
          helm-version: 'latest'         # Helm 버전 지정
          helmfile-args: template \
                         --environment dev \
                         > rendered/manifests.yaml

      - name: Upload Rendered Manifests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: helm-rendered-manifests
          path: rendered/manifests.yaml

      - name: Install Pluto
        uses: FairwindsOps/pluto/github-action@master

      # - name: Run Pluto and generate reports
      #   id: run-pluto
      #   continue-on-error: true
      #   shell: bash
      #   run: |
      #     set +e
      #     mkdir -p reports
      #     set -o pipefail

      #     echo "🔍 Running Pluto scan..."
      #     pluto detect-files -d pluto/kubernetes -o wide | tee reports/pluto.txt
      #     EXITCODE=$?

      #     # Markdown 포맷으로 PR 코멘트용 결과 생성
      #     pluto detect-files -d pluto/kubernetes -o markdown > reports/pluto.md

      #     echo "PLUTO_EXIT=$EXITCODE" >> $GITHUB_ENV

      #     echo "✅ Pluto finished with exit code: $EXITCODE"

      # - name: Upload Pluto reports
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pluto-report
      #     path: reports/

      # - name: Comment PR with Pluto results
      #   uses: thollander/actions-comment-pull-request@v3
      #   with:
      #     message: |
      #       ## 🔎 Pluto Scan Result
      #       ---

      #     file-path: reports/pluto.md

      - name: Run Pluto and export JSON
        run: |
          mkdir -p reports
          set +e
          pluto detect --target-versions k8s=v1.29 -o json < rendered/manifests.yaml > reports/pluto.json
          jq '(.items // .) | .[0]' -C reports/pluto.json
          EXIT=$?
          echo "PLUTO_EXIT=$EXIT" >> $GITHUB_ENV

      - name: Build line-style comment (no table)
        shell: bash
        run: |
          # findings가 없으면 메시지 출력
          if [ "$(jq '. | length' reports/pluto.json)" = "0" ] || [ "$(jq '.items? // . | length' reports/pluto.json)" = "0" ]; then
            {
              echo "## 🔎 Pluto Scan Result"
              echo "Deprecated/Removed API 사용이 발견되지 않았습니다."
            } > reports/comment.md
            exit 0
          fi

          # 결과를 라인 포맷으로 변환
          jq -r '
            def status:
              if   (.removed    // false) then "Removed"
              elif (.deprecated // false) then "Deprecated"
              else "OK" end;
            def icon:
              if   (.removed    // false) then "🚫"
              elif (.deprecated // false) then "⚠️"
              else "✅" end;
            def safe($s):
              if ($s == null or $s == "") then "-" else $s end;

            ( .items // . ) as $items
            |
            "## 🔎 Pluto Scan Result\n"
            + "**Total:** \($items|length)  ·  **Removed:** \($items|map(select(.removed==true))|length)  ·  **Deprecated:** \($items|map(select(.deprecated==true))|length)\n"
            + "\n---\n"
            + (
                $items
                | map(
                    "### " + (icon) + " " + (status) + " — " + (safe(.api["kind"])) + " `" + (safe(.name)) + "`\n"
                    + "<details><summary>Details</summary>\n\n"
                    + "```yaml\n"
                    + "Chart: "          + (.name // "-")      + "\n"
                    + "FilePath: "      + (safe(.filePath))            + "\n"
                    + "Kind: "           + (safe(.api["kind"]))                 + "\n"
                    + "Deprecated API: " + (safe(.api["version"]))              + "\n"
                    + "Replacement: "    + (safe(.api["replacement-api"] // "none"))+ "\n"
                    + "Status: "         + (status)                      + "\n"
                    + "```\n\n"
                    + "</details>\n"
                  )
                | join("\n---\n")
              )
          ' reports/pluto.json > reports/comment.md

      - name: Comment PR (single message)
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file-path: reports/comment.md

      # ❗ 선택: Removed 발견 시만 실패 처리하고 싶다면 아래 유지
      #    항상 성공시키고 싶으면 이 스텝을 제거하면 됩니다.
      - name: Fail if removed found
        if: env.PLUTO_EXIT == '3' || env.PLUTO_EXIT == '4'
        run: exit 1
